{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/Footer.js","components/TodoApp.js","actions/todo.js","actions/types.js","reducers/todoReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["props","onSubmit","handleSubmit","className","type","name","required","onChange","handleNewTodoChange","autoFocus","placeholder","TodoItem","data-cy","isCompleted","id","style","textDecoration","checked","handleToogle","onClick","handleRemove","todos","map","todo","key","incompleteTodos","length","TodoApp","state","evt","setState","target","value","deleteTodo","todoExists","exists","forEach","item","Object","values","event","preventDefault","createTodo","targetTodo","find","t","updated","handleItemCompleteChecked","this","TodoForm","TodoList","Footer","filter","one","Component","connect","payload","initialState","combineReducers","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57869065.chunk.js","sourcesContent":["import React from 'react'\n\nexport default props =>\n  <form onSubmit={props.handleSubmit}>\n    <div className='form-group'>\n    <input\n      type='text'\n      className=\"new-todo form-control\"\n      name=\"name\"\n      required\n      onChange={props.handleNewTodoChange} \n      autoFocus\n      placeholder=\"What needs to be done?\"/>\n    </div>\n  </form>\n","import React from 'react'\n\nconst TodoItem = props =>\n  <tbody data-cy='listItem' className={props.isCompleted? \"completed\":null}>\n    <tr className=\"view\"><td>{props.id}</td><td style={{textDecoration:props.isCompleted?'line-through':''}}><label>{props.name}</label></td>\n    <td><input className=\"toggle\" type=\"checkbox\" checked={props.isCompleted}  onChange={()=>props.handleToogle(props.id)}/></td>\n    <td><button className='remove' onClick={()=>props.handleRemove(props.id)}>x</button></td>\n    </tr>\n  </tbody>\n\nexport default props =>\n<div>\n  <table className=\"table\">\n    <thead>\n    </thead>\n    {props.todos.map(todo => <TodoItem handleRemove={props.handleRemove} handleToogle={props.handleToogle}  key={todo.id} {...todo}/>)}\n  </table>\n  </div>\n  ","import React from 'react'\n\nexport default props =>\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      <strong>{props.incompleteTodos.length}</strong> todos left\n    </span>\n    <ul className=\"filters\">\n      <li>All</li>{''} {props.todos.length}\n    </ul>\n  </footer>\n","import React, {Component} from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport {createTodo,deleteTodo,handleItemCompleteChecked} from '../actions/todo';\nimport {connect} from 'react-redux';\nimport Footer from './Footer';\nclass TodoApp extends Component {\n\n state = {\n      \n }\nhandleNewTodoChange=(evt)=>{\n  this.setState({[evt.target.name]:evt.target.value});\n}\nhandleRemove=(id)=>{\n    this.props.deleteTodo(id);\n}\ntodoExists=todo=>{\n  let exists=false\n  this.props.todos.forEach(item=>{\n      if(todo===Object.values(item)[0]){\n          exists= true;\n      }\n  })\n  return exists;\n}\n\nhandleSubmit=(event)=>{\n  event.preventDefault();\n  const todo={\n    name:this.state.name,\n    isCompleted :false,\n    id:this.props.todos.length+1\n  }\n\n    if(!this.todoExists(todo.name)){\n      this.props.createTodo(todo);\n    }\n    }\n    \n\nhandleToogle=id=>{\n    const targetTodo=this.props.todos.find(t=>t.id===id)\n    const updated={\n      ...targetTodo,\n      isCompleted:!  targetTodo.isCompleted\n    }\n    const todos=this.props.todos.map(t=>t.id===updated.id?updated:t)\n    this.props.handleItemCompleteChecked(todos)\n  }\n  \n\n  render () {\n    const {todos}=this.props;\n    return (\n        <div className='container'>\n          <header className=\"header\">\n            <h1 className='heading'>TodoList</h1>\n            <TodoForm \n            handleNewTodoChange={this.handleNewTodoChange}\n            handleSubmit={this.handleSubmit}\n            />\n          </header>\n          <div>\n            <section className=\"main\">\n            { todos.length===0?(<p className='info'>No todos today,woo!</p>):(\n               <TodoList todos={todos} handleRemove={this.handleRemove}  handleToogle={this.handleToogle}/>\n          )}\n           </section>\n           <Footer todos={todos} incompleteTodos={todos.filter(one=>one.isCompleted===false)}/>\n           </div>\n          </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  todos: state.todos.todos\n});\n\nexport default connect(mapStateToProps, { deleteTodo,createTodo,handleItemCompleteChecked })(TodoApp);","import {CREATE_NEW_TODO,DELETE_TODO,TOGGLE_TODO_CHECKED } from './types';\n\n\nexport const createTodo = todo => {\n      return{\n        type: CREATE_NEW_TODO,\n        payload: todo\n      }\n};\n\nexport const deleteTodo = todo => {\n  return{\n    type: DELETE_TODO,\n    payload: todo\n  }\n}\n\n  export const  handleItemCompleteChecked = todos => {\n    return{\n      type: TOGGLE_TODO_CHECKED,\n      payload: todos\n    } \n};\n","export const CREATE_NEW_TODO = 'CREATE_NEW_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_TODO_CHECKED='TOGGLE_TODO_CHECKED';\n","import {  CREATE_NEW_TODO,DELETE_TODO,TOGGLE_TODO_CHECKED} from '../actions/types';\n\nconst initialState = {\n  todos: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_NEW_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case DELETE_TODO:\n        return {\n          ...state,\n          todos:state.todos.filter(t=>t.id!==action.payload)\n        };\n    case TOGGLE_TODO_CHECKED:\n        return {\n          ...state,\n          todos:action.payload\n        };  \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\n\nexport default combineReducers({\n  todos: todoReducer\n});\n","import { createStore} from 'redux';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react'\nimport TodoApp from './components/TodoApp';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.css';\nclass App extends React.Component {\n    render(){\n        return (\n            <Provider store={store}>\n                <TodoApp/>\n            </Provider> \n         )\n    }\n   \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}